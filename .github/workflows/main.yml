name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: kube-cluster
  GKE_ZONE: southamerica-west1-a
  IMAGE1: todo-app
  IMAGE2: todo-backend
  DEPLOYMENT1: todo-app
  DEPLOYMENT2: todo-backend
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud --quiet auth configure-docker

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Build and publish app
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE1:$BRANCH-$GITHUB_SHA" todo-app/
          docker push "gcr.io/$PROJECT_ID/$IMAGE1:$BRANCH-$GITHUB_SHA"

      - name: Build and publish backend
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE2:$BRANCH-$GITHUB_SHA" todo-backend/
          docker push "gcr.io/$PROJECT_ID/$IMAGE2:$BRANCH-$GITHUB_SHA"

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Deploy
        run: |-
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH_NAME" == "main" ]; then
            NAMESPACE="default"
          else
            NAMESPACE=$BRANCH_NAME
          fi

          kubectl create namespace $NAMESPACE || true
          kubectl config set-context --current --namespace=$NAMESPACE
          kustomize edit set namespace $NAMESPACE
          kustomize edit set image PROJECT/IMAGE1=gcr.io/$PROJECT_ID/$IMAGE1:$BRANCH-$GITHUB_SHA
          kustomize edit set image PROJECT/IMAGE2=gcr.io/$PROJECT_ID/$IMAGE2:$BRANCH-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment $DEPLOYMENT1
          kubectl rollout status deployment $DEPLOYMENT2
          kubectl get services -o wide